[
    {
        "name":"[Python] Variables",
        "scope":"source.python meta.function.parameters.python variable.parameter.python, source.python meta.function-call.arguments.python meta.qualified-name.python meta.generic-name.python, source.python meta.function-call.arguments.python variable.parameter.python",
        "foreground":"var(orange)"
    },
    {
        "name":"[Python] Function Arguments",
        "scope":"source.python meta.function-call.arguments.python meta.qualified-name.python meta.generic-name.python",
        "foreground":"var(foreground)"
    },
    {
        "name":"[Python] Statement While",
        "scope":"source.python meta.statement.while.python constant.language.python, source.python constant.language.python",
        "foreground":"var(pink)"
    },
    {
        "name":"[Python] Annotation",
        "scope":"source.python meta.function.parameters.annotation.python meta.qualified-name.python support.type.python",
        "foreground":"var(yellow)",
        "font_style":"italic"
    },
    {
        "name":"[Python] Constant",
        "scope":"source.python meta.function.parameters.default-value.python constant.language.python",
        "foreground":"var(purple)"
    },
    {
        "name":"[Python] Support",
        "scope":"source.python meta.function-call.python meta.qualified-name.python variable.function.python support.function.builtin.python",
        "foreground":"var(yellow)"
    },
    {
        "name":"[Python] Function Parameters",
        "scope":"source.python meta.function.parameters.annotation.python meta.item-access.arguments.python meta.qualified-name.python support.type.python",
        "foreground":"var(green)"
    },
    {
        "name":"[Python] Generic Name",
        "scope":"source.python meta.function.parameters.annotation.python meta.item-access.arguments.python meta.item-access.python meta.qualified-name.python meta.generic-name.python",
        "foreground":"var(blue)"
    },
    {
        "name":"[Python] Exception",
        "scope":"source.python meta.statement.raise.python meta.function-call.python meta.qualified-name.python variable.function.python support.type.exception.python",
        "foreground":"var(red)"
    },
    {
        "name":"[Python] Statements",
        "scope":"source.python meta.statement.for.python keyword.control.flow.for.python, source.python meta.statement.if.python keyword.control.flow.conditional.python, source.python meta.statement.conditional.python keyword.control.flow.conditional.python, source.python keyword.control.flow.break.python, source.python keyword.control.flow.continue.python, source.python meta.statement.while.python keyword.control.flow.while.python, source.python keyword.control.flow.pass.python",
        "foreground":"var(cyan)"
    },
    {
        "name":"[Python] Return",
        "scope":"source.python keyword.control.flow.return.python",
        "foreground":"var(cyan)"
    }
]
